name: Build and Release Extension

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build Extension
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build directory
        run: |
          mkdir -p build
          cp -r * build/
        
      - name: Create ZIP
        run: |
          cd build
          zip -r ../checkURL.zip .

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: extension
          path: checkURL.zip

  release:
    name: Release Extension
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: extension
          path: ./build/

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Create Release
        run: |
          RELEASE_TAG=${GITHUB_REF#refs/tags/}
          RELEASE_NAME="Release ${RELEASE_TAG}"
          BODY="Release for version ${RELEASE_TAG}"

          curl -X POST \
            -H "Authorization: token $TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -d "{\"tag_name\": \"$RELEASE_TAG\", \"name\": \"$RELEASE_NAME\", \"body\": \"$BODY\"}" \
            https://api.github.com/repos/${{ github.repository }}/releases
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload ZIP to Release
        run: |
          RELEASE_ID=$(curl -s -H "Authorization: token $TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.ref }} | jq -r .id)
          
          # Upload the ZIP file to the release
          curl -X POST \
            -H "Authorization: token $TOKEN" \
            -H "Content-Type: application/zip" \
            --data-binary @./build/checkURL.zip \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID/assets?name=checkURL.zip"
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
